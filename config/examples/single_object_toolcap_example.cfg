[dataset]
# Specify how many images should be rendered
image_count = 5
# Specify the base path where data will be written to. Note that this is a base
# path, to which additional information will be added such as Scenario-Number
# and Camera-Name
base_path = $AMIRA_DATASETS/SimpleToolCap-Test
# specify the scene type
scene_type = SimpleObject

[camera_info]
width = 640
height = 480
model = pinhole
name = Pinhole Camera
zeroing = 0, 0, 0
intrinsic = 9.9801747708520452e+02,9.9264009290521165e+02,6.6049856967197002e+02,3.6404286361152555e+02,0
sensor_width = 0
focal_length = 0
hfov = 0
intrinsics_conversion_mode = mm

[render_setup]
# specify which renderer to use. Usually you should leave this at
# blender-cycles. Note that, at the moment, this is hard-coded to cycles
# internally anyway.
backend = blender-cycles
# integrator (either PATH or BRANCHED_PATH)
integrator = BRANCHED_PATH
# use denoising (true, false)
denoising = True
# samples the ray-tracer uses per pixel
samples = 8

[scene_setup]
# we also specify where to load environment textures from
environment_textures = $AMIRA_DATASETS/OpenImagesV4/Images

[parts]
# here we use the 'ply only' version to load objects. Fore more documentation,
# see config/workstation_scenario01_test.cfg
ToolCap =
# this scene loads a tool cap mesh. This is loaded from the corresponding mesh
ply.ToolCap = $AMIRA_DATA_GFX/cad/parts/tool_cap_x10.ply
# ply models often have a different scale than what is used in blender. Here, we
# have to scale down the model to match blender units (which are treated to be
# meters)
ply_scale.ToolCap = 0.001, 0.001, 0.001

# another single object to try
LetterB =
ply.LetterB = $AMIRA_DATA_GFX/cad/parts/B.ply
ply_scale.LetterB = 0.001, 0.001, 0.001

[scenario_setup]
# here we specify the objects of interest. In the case of this demo, we are only
# interested in one part of type "tool_cap". Although this configuration option
# is not used in the backend script, it is useful to document the items that are
# part of the scenario
target_object = ToolCap
object_material = metal