[dataset]
# Specify how many images should be rendered
image_count = 5
# Specify the base path where data will be written to. Note that this is a base
# path, to which additional information will be added such as Scenario-Number
# and Camera-Name
base_path = $AMIRA_DATASETS/WorkstationScenarios-Train
# specify the scene type
scene_type = WorkstationScenarios

[camera_info]
# In this section you specify the camera information, which will have a direct
# impact on rendering results.

# The width and height have an influence on the rendering resolution. In case
# you wish to set a specific calibration matrix that you obtained, for
# instance, from OpenCV, and do not wish to temper with the rendering
# resolution, then set these values to 0.
width = 640
height = 480

# The camera model to use. At the moment, this value is ignored in
# amira_blender_rendering. However, because all rendering is in fact done with a
# pinhole camera model, this value serves as documentation
model = pinhole

# Also this value has no impact on rendering likewise the model. However, if
# you want to specify a certain camera name for documentation purposes, this is
# the place.
name = Pinhole Camera

# When using blender, X is meant to point to the right and y "into" the monitor,
# i.e. front view aligns the view such that Y is collapsed and you still see X
# to the right and Z to the top. A camera with "0 rotation" looks into the
# negative Z direction. Hence, an object would have a relative rotation to the
# camera of 0 degrees only when the camera looks on it from top. This might be
# counterintuitive or give wrong results (due to different expectations).
#
# A more natural understanding can be achieved when the 0 deg rotation looks at
# an object from the front - that is, when the camera is looking along the Y
# axis. This can be achieved by rotating the camera by 90 degrees around X.
#
# The following configuration parameter allows to change this behavior. The
# default is 90, 0, 0 which means that the camera is rotated by 90 degrees by X
# as mentioned above to achieve frontal view with 0 rotation onto an object.
zeroing = 90, 0, 0

# You can specify the calibration matrix K that was determined for you camera,
# for instance with OpenCV.
#
# Note that the values in your calibration matrix
# might not end up in proper render resolutions. For instance, this is the case
# in the example below, which would result in a rendering resolution of about
# 1320.98 x 728.08. Blender will round these values to suitable integer values.
# As a consequence, even if you set width and height above to 0, the effective K
# that blender uses might be slightly different from your K.
#
# To accomodate this 'issue', amira_blender_rendering will write an
# 'effective_k' to the configuration as soon as setting up cameras and rendering
# is done. Recall that all configurations will be stored alongside the created
# dataset, so you can easily retrieve the effective_k
K = 9.9801747708520452e+02, 0., 6.6049856967197002e+02, 0., 9.9264009290521165e+02, 3.6404286361152555e+02, 0., 0., 1.

[render_setup]
# specify which renderer to use. Usually you should leave this at
# blender-cycles. Note that, at the moment, this is hard-coded to cycles
# internally anyway.
backend = blender-cycles
# integrator (either PATH or BRANCHED_PATH)
integrator = BRANCHED_PATH
# use denoising (true, false)
denoising = True
# samples the ray-tracer uses per pixel
samples = 64

[scene_setup]
# specify the blender file from which to load the scene
blend_file = $AMIRA_DATA_GFX/modeling/workstation_scenarios.blend
# specify where background / environment images will be taken from during
# rendering. This can be a single file, or a directory containing images
environment_texture = $AMIRA_DATASETS/OpenImagesV4/Images
# specify which cameras to use for rendering. The names here follow the names in
# the blender file, i.e. Camera, StereoCamera.Left, StereoCamera.Right
cameras = Camera
# cameras = Camera, StereoCamera.Left, StereoCamera.Right
# number of frames to forward-simulate in the physics simulation
forward_frames = 15

[parts]
# this optional section is intended to add parts from separate blender files.
# Here, you specify a name of an object and the file in which the object resides
# in the format
#       part_name = blend_file
# Note that the object name *must* correspond to the name that the object has in
# the blender file. They will be loaded on-demand when setting up the scenario.
#
# Make sure that your parts are active rigid objects with proper weight and
# sensitivity margin!
#
# The first example is a "hammerschraube" (hammer head screw)
hammerschraube = $AMIRA_DATA_GFX/cad/rexroth/hammerschraube.blend
# The second example is a 60x60 angle element.
winkel_60x60 = $AMIRA_DATA_GFX/cad/rexroth/winkel_60x60.blend

[scenario_setup]
# At the moment, the 6 different scenarios in workstation_scenarios.blend are
# simply enumerated. Have a look at the .blend file for the order in which they
# appear, e.g. identifiable by the numbering of the cameras
scenario = 1
# Specify all target objects that shall be dropped at random locations into the
# environment. Target objects are all those objects that are already in the
# .blend file in the 'Proto' collection. You can also specify parts that were
# presented above using the syntax 'parts.partname:count'
target_objects = Sterngriff:4, Wuerfelverbinder:3, parts.hammerschraube:7, parts.winkel_60x60:5

