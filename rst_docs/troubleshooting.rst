Troubleshooting
===============

1. I get a "CUDA out of memory" exception when rendering, what shall I do?

    Check if the models and scenarios you try to render can be rendered on your
    computer and do not exceed your GPU's RAM limit. To test this, open the file in
    blender and try to render it from the GUI. Blender should indicate how much
    memory it requires for rendering. Compare this value with your GPU RAM.

2. I get a "CUDA out of memory" exception, but I have a GPU with gazillion GB of
   RAM!

    There appears to be an issue for certain scenarios and models that have many
    light sources and different procedural textures. In this case, it happens
    every once in a while, that the BVH that is generated by blender does not
    fit into the GPU. It is currently unclear if this is a blender problem, a
    driver issue, or something unrelated.

    If you experience this issue, try to re-run rendering (both within blender,
    or the scripts), as this issue appears to happen only sporadically. If
    rendering starts from the script, it will finish - rendering and moving data
    to the GPU is performed only in the beginning.

    If re-running does not solve this issue, try to reduce the amount of light
    sources and models in your scenario.

3. Why does forward simulating frames require lots of time?

    The reason for this is that, to drop objects physically correctly, we use
    blenders physics engine (in turn, this is bullet physics), and set the shape
    transform in blender to "Mesh". The time the physics simulation takes
    depends crucially on the model you use, an in particular the number of
    vertices your model has. The rule of thumb is: fewer vertices are faster to
    simulate forward.

    Conclusively, either wait until it's done, or use a low-poly model of your
    target object.

4. I set up my custom sceneario and its python *backend* but when I try to run abrgen
   I get a "Runtime" error telling that ABR does not know my scenario!

    Most likely you forgot to let ABR automatically register your scenario by using
    ``abr_scenes.register(name=, type=)``. Please refer to :ref:`discover_scene` for
    more details.

    If the above is not the case, in your configuration .cfg file make sure that
    ``dataset.scene_type`` is set to be exactly equal to your selected ``_scene_name``.
